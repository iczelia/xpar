name: Build

on: [ push, pull_request ]

jobs:
  dist:
    name: Package
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Configure
      run: |
        ./bootstrap && ./configure
    - name: Make source package
      run: make VERSION=${{ github.sha }} dist
    - name: Upload source package artifact
      uses: actions/upload-artifact@v4
      with:
        name: xpar-${{ github.sha }}
        path: xpar-${{ github.sha }}.tar.gz
    - name: Run distcheck
      run: make distcheck

  build-ubuntu-x86_64:
    name: Compile (Ubuntu clang/gcc, x86_64)
    needs: [ dist ]
    strategy:
      fail-fast: false
      matrix:
        compiler: [ clang, gcc ]
        feature: [ enable-x86_64, disable-x86_64 ]
    runs-on: ubuntu-latest
    steps:
    - uses: ilammy/setup-nasm@v1
    - name: Download source package artifact
      uses: actions/download-artifact@v4
      with:
        name: xpar-${{ github.sha }}
    - name: Extract source package
      run: tar --strip-components=1 -xf xpar-${{ github.sha }}.tar.gz
    - name: Configure
      run: ./configure CC=${{ matrix.compiler }} --${{ matrix.feature }}
    - name: Make
      run: make all self-check
  
  build-macos-x86_64:
    name: Compile (MacOS clang, x86_64)
    needs: [ dist ]
    strategy:
      fail-fast: false
      matrix:
        feature: [ enable-x86_64, disable-x86_64 ]
    runs-on: macOS-13
    steps:
    - uses: ilammy/setup-nasm@v1
    - name: Download source package artifact
      uses: actions/download-artifact@v4
      with:
        name: xpar-${{ github.sha }}
    - name: Extract source package
      run: tar --strip-components=1 -xf xpar-${{ github.sha }}.tar.gz
    - name: Configure
      run: ./configure CC=clang --${{ matrix.feature }}
    - name: Make
      run: make all self-check
  
  build-macos-aarch64:
    name: Compile (MacOS clang, aarch64)
    needs: [ dist ]
    runs-on: macOS-latest
    strategy:
      fail-fast: false
      matrix:
        feature: [ enable-aarch64, disable-aarch64 ]
    steps:
    - name: Download source package artifact
      uses: actions/download-artifact@v4
      with:
        name: xpar-${{ github.sha }}
    - name: Extract source package
      run: tar --strip-components=1 -xf xpar-${{ github.sha }}.tar.gz
    - name: Configure
      run: ./configure CC=clang --${{ matrix.feature }}
    - name: Make
      run: make all self-check
  
  build-windows-x86_64:
    name: Compile (Windows x86_64)
    needs: [ dist ]
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    strategy:
      fail-fast: false
      matrix:
        feature: [ enable-x86_64, disable-x86_64 ]
    steps:
    - name: Download source package artifact
      uses: actions/download-artifact@v4
      with:
        name: xpar-${{ github.sha }}
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        msystem: mingw64
        install: make gcc nasm tar gzip diffutils
    - name: Extract source package
      run: tar --strip-components=1 -xf xpar-${{ github.sha }}.tar.gz
    - name: Configure
      run: ./configure CC=gcc --${{ matrix.feature }}
    - name: Make
      run: make all self-check

  build-windows-i686:
    name: Compile (Windows i686)
    needs: [ dist ]
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - name: Download source package artifact
      uses: actions/download-artifact@v4
      with:
        name: xpar-${{ github.sha }}
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        msystem: mingw32
        install: make gcc nasm tar gzip diffutils
    - name: Extract source package
      run: tar --strip-components=1 -xf xpar-${{ github.sha }}.tar.gz
    - name: Configure
      run: ./configure CC=gcc --${{ matrix.feature }}
    - name: Make
      run: make all self-check
